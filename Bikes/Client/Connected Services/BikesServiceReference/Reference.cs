//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.BikesServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BikesServiceReference.IServiceBikes", CallbackContract=typeof(Client.BikesServiceReference.IServiceBikesCallback))]
    public interface IServiceBikes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetBikesTown", ReplyAction="http://tempuri.org/IServiceBikes/GetBikesTownResponse")]
        string GetBikesTown(string city, string station_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetBikesTown", ReplyAction="http://tempuri.org/IServiceBikes/GetBikesTownResponse")]
        System.Threading.Tasks.Task<string> GetBikesTownAsync(string city, string station_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetCities", ReplyAction="http://tempuri.org/IServiceBikes/GetCitiesResponse")]
        string[] GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetCities", ReplyAction="http://tempuri.org/IServiceBikes/GetCitiesResponse")]
        System.Threading.Tasks.Task<string[]> GetCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetStationsCity", ReplyAction="http://tempuri.org/IServiceBikes/GetStationsCityResponse")]
        string[] GetStationsCity(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/GetStationsCity", ReplyAction="http://tempuri.org/IServiceBikes/GetStationsCityResponse")]
        System.Threading.Tasks.Task<string[]> GetStationsCityAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/SubscribeGetedBikesedEvent", ReplyAction="http://tempuri.org/IServiceBikes/SubscribeGetedBikesedEventResponse")]
        void SubscribeGetedBikesedEvent(string city, string station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBikes/SubscribeGetedBikesedEvent", ReplyAction="http://tempuri.org/IServiceBikes/SubscribeGetedBikesedEventResponse")]
        System.Threading.Tasks.Task SubscribeGetedBikesedEventAsync(string city, string station);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBikesCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBikes/GetedBikesed")]
        void GetedBikesed(string city, string station_name, string nb_bikes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBikesChannel : Client.BikesServiceReference.IServiceBikes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBikesClient : System.ServiceModel.DuplexClientBase<Client.BikesServiceReference.IServiceBikes>, Client.BikesServiceReference.IServiceBikes {
        
        public ServiceBikesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceBikesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceBikesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBikesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBikesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetBikesTown(string city, string station_number) {
            return base.Channel.GetBikesTown(city, station_number);
        }
        
        public System.Threading.Tasks.Task<string> GetBikesTownAsync(string city, string station_number) {
            return base.Channel.GetBikesTownAsync(city, station_number);
        }
        
        public string[] GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
        
        public string[] GetStationsCity(string city) {
            return base.Channel.GetStationsCity(city);
        }
        
        public System.Threading.Tasks.Task<string[]> GetStationsCityAsync(string city) {
            return base.Channel.GetStationsCityAsync(city);
        }
        
        public void SubscribeGetedBikesedEvent(string city, string station) {
            base.Channel.SubscribeGetedBikesedEvent(city, station);
        }
        
        public System.Threading.Tasks.Task SubscribeGetedBikesedEventAsync(string city, string station) {
            return base.Channel.SubscribeGetedBikesedEventAsync(city, station);
        }
    }
}
